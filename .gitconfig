[user]
	name = Mikael Weiss
	email = campingmikael@icloud.com

[core]
	editor = vim
	excludesFile = /Users/mikaelweiss/.gitnore
	pager = less -F -X

[alias]
	st = status
	acp = "!f() { git add -A && git commit -m \"$1\" && git push; }; f"
	br = branch
	sw = switch
	ch = checkout
	branch-prune = "!git fetch -p && for b in $(git for-each-ref --format='%(if:equals=[gone])%(upstream:track)%(then)%(refname:short)%(end)' refs/heads); do git branch -d $b; done"
	bb = !better-git-branch
    # Checkpoints allow you to get a commit hash for a WIP.
  # It's intended for when you'd like to mark progress to return to later, but don't yet want a full commit.
  # See https://nathanorick.com/git-checkpoints/ for more details.
  save = "!f() { git add -A && git commit --no-verify -m "\"SAVEPOINT - $@\""; }; f"
  undo = reset HEAD~1 --mixed
  checkpoint = "!f() { git save ${1-CHECKPOINT}; git tag "\"checkpoint/${1-`date +%Y_%m_%d_%H_%M_%S`}\""; git undo; }; f"
  listCheckpoints = tag -l "checkpoint/*"
  deleteCheckpoint = "!f() { git tag -d checkpoint/$1; }; f"
  loadCheckpoint = "!f() { git reset --hard checkpoint/$1 && git undo; }; f"
  cp = checkpoint
  cpls = listCheckpoints
  cpd = deleteCheckpoint
  cpld = loadCheckpoint

[init]
	defaultBranch = main

[pager]
	branch = false
[diff]
	tool = FileMerge

[difftool]
	prompt = false

[difftool "FileMerge"]
	cmd = " ~/Applications/FileMerge.app/Contents/Resources/launchfilemerge $LOCAL $REMOTE"
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[maintenance]
	repo = /Users/mikaelweiss/code/strive

